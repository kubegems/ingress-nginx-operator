name: Continuous Integration

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "docs/**"
      - "examples/**"
      - "**.md"
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - "docs/**"
      - "examples/**"
      - "**.md"
  create:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

env:
  DOCKER_BUILDKIT: 1

jobs:
  binary:
    name: Build Binary
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Determine Go version from go.mod
        run: echo "GO_VERSION=$(grep "go 1." go.mod | cut -d " " -f 2)" >> $GITHUB_ENV
      - name: Setup Golang Environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build Binary
        run: make build
      - name: Cache Artifacts
        uses: actions/cache@v2.1.6
        with:
          path: ${{ github.workspace }}/bin/manager
          key: ingress-nginx-operator-${{ github.run_id }}-${{ github.run_number }}

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Golang Environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run Tests
        run: make test

  build:
    name: Build Image
    runs-on: ubuntu-20.04
    needs: [binary, unit-tests]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Fetch Cached Artifacts
        uses: actions/cache@v2.1.6
        with:
          path: ${{ github.workspace }}/bin/manager
          key: ingress-nginx-operator-${{ github.run_id }}-${{ github.run_number }}
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          context: "."
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: kubegems/ingress-nginx-operator:${{ github.sha }}
          push: false

  release-docker:
    name: Release Image
    runs-on: ubuntu-20.04
    needs: [build, unit-tests]
    if: github.repository == 'kubegems/ingress-nginx-operator' &&
      github.event_name == 'create' &&
      contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Fetch Cached Artifacts
        uses: actions/cache@v2.1.6
        with:
          path: ${{ github.workspace }}/build/_output/bin/ingress-nginx-operator
          key: ingress-nginx-operator-${{ github.run_id }}-${{ github.run_number }}
      - name: Retrieve Tag
        id: get_version
        run: echo ::set-output name=GIT_TAG::$(echo ${GITHUB_REF/refs\/tags\//})
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: DockerHub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Push to Dockerhub
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          context: "."
          tags: |
            kubegems/ingress-nginx-operator:latest
            kubegems/ingress-nginx-operator:${{ steps.get_version.outputs.GIT_TAG }}
          push: true
